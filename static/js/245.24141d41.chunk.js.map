{"version":3,"file":"static/js/245.24141d41.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.js","redux/selectors.js","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","components/Section/Section.styled.js","components/Section/Section.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","components/App.styled.jsx","pages/Contacts.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Form = styled.form`\ndisplay: flex;\nflex-direction: column;\ngap: 20px;\n\n`\nexport const InputName = styled.label`\nfont-size: 24px;\nfont-weight: 500;\n`\nexport const Input = styled.input`\nmax-width: 360px;\n\n`\nexport const AddContact = styled.button`\n\nwidth: 200px;\nheight: 30px;\nfont-size: 18px;\nbackground-image: linear-gradient(to right, #314755 0%, #26a0da  51%, #314755  100%);\nmargin: auto;\n\n:hover {\n  color: #fff;\n  border: 1px solid burlywood;\n}     \n`","export const selectContacts = state => state.contacts.contacts;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectFilter = state => state.filter.filter;\n","import { useState } from 'react';\nimport { Form, InputName, Input, AddContact } from './ContactForm.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/selectors';\nimport { addContact } from 'redux/operations';\n\nconst ContactForm = () => {\n  const [name, setName] = useState('');\n  const [phone, setPhone] = useState('');\n\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (contacts.some(e => e.name === name)) {\n      alert(`${name} is already in contacts`);\n    } else {\n      dispatch(addContact({ name, phone }));\n    }\n    setName('');\n    setPhone('');\n  };\n\n  const handleChange = e => {\n    switch (e.currentTarget.name) {\n      case 'name':\n        setName(e.currentTarget.value);\n        break;\n      case 'phone':\n        setPhone(e.currentTarget.value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <InputName>Name</InputName>\n      <Input\n        type=\"text\"\n        value={name}\n        onChange={handleChange}\n        name=\"name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n      />\n      <InputName>Number</InputName>\n      <Input\n        type=\"tel\"\n        value={phone}\n        onChange={handleChange}\n        name=\"phone\"\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n      />\n      <AddContact type=\"submit\">Add contact</AddContact>\n    </Form>\n  );\n};\n\nexport default ContactForm;\n","import styled from 'styled-components';\n\nexport const ContactsList = styled.ol`\npadding: 10px;\n`\nexport const ListItem = styled.li`\nmargin-bottom: 10px;\nheight: max-content;\ndisplay: flex;\nalign-items: center;\njustify-content: space-between;\nborder-bottom: 1px solid grey;\n\n`\nexport const DeleteBtn = styled.button`\n\nmargin-left: 20px;\n`","import { ContactsList, ListItem, DeleteBtn } from './ContactList.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts, selectFilter } from 'redux/selectors';\nimport { deleteContact } from 'redux/operations';\n\nconst ContactList = () => {\n  const contacts = useSelector(selectContacts);\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n  const visibleContacts = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(filter?.toLowerCase())\n  );\n\n  return (\n    <ContactsList>\n      {visibleContacts.map(contact => (\n        <ListItem key={contact.id}>\n          {contact.name}: {contact.phone}\n          <DeleteBtn\n            type=\"button\"\n            onClick={() => dispatch(deleteContact(contact.id))}\n          >\n            Delete\n          </DeleteBtn>\n        </ListItem>\n      ))}\n    </ContactsList>\n  );\n};\n\nexport default ContactList;\n","import styled from 'styled-components';\n\nexport const SectionBox = styled.section`\nmax-width: 1200px;\ncolor: black;\nfont-size: 20px;\npadding: 20px;\nborder: 1px solid black;\nbox-shadow: rgba(0, 0, 0, 0.35) 0px -50px 36px -28px inset;\n:not(:last-child){\n  margin-top: 20px;\n}\n`\nexport const SectionTitle = styled.h2`\nmargin-top: 0;\n`","import PropTypes from 'prop-types';\nimport { SectionBox, SectionTitle } from './Section.styled';\n\nexport default function Section({ title, children }) {\n  return (\n    <SectionBox>\n      <SectionTitle>{title}</SectionTitle>\n      {children}\n    </SectionBox>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n};\n","import styled from 'styled-components'\n\nexport const FilterTitle = styled.h3`\nfont-size: 24px;\nfont-weight: 500;\nmargin-bottom: 10px;\n`\nexport const FilterInput = styled.input`\nwidth: 260px;\nmargin: auto;\n`","import { FilterTitle, FilterInput } from './Filter.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectFilter } from 'redux/selectors';\nimport { changeFilter } from 'redux/filtersSlice';\n\nconst Filter = () => {\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n  const handleFilter = e => {\n    e.preventDefault();\n    dispatch(changeFilter(e.currentTarget.value));\n  };\n  return (\n    <>\n      <FilterTitle>Find contacts by name</FilterTitle>\n      <FilterInput\n        type=\"search\"\n        name=\"filter\"\n        value={filter}\n        onChange={handleFilter}\n      />\n    </>\n  );\n};\n\nexport default Filter;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  margin: auto;\n  box-shadow: rgba(0, 0, 0, 0.4) 0px 2px 4px,\n    rgba(0, 0, 0, 0.3) 0px 7px 13px -3px, rgba(0, 0, 0, 0.2) 0px -3px 0px inset;\n    \n  width: 300px;\n  @media (min-width: 480px) {\n    width: 420px;\n  }\n  @media (min-width: 768px) {\n    width: 700px;\n  }\n`;","import ContactForm from '../components/ContactForm/ContactForm';\nimport ContactList from '../components/ContactList/ContactList';\nimport Section from '../components/Section/Section';\nimport Filter from '../components/Filter/Filter';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'redux/operations';\nimport { selectIsLoading, selectError } from 'redux/selectors';\nimport { ThreeDots } from 'react-loader-spinner';\nimport { Container } from '../components/App.styled';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <Container>\n      <Section title=\"Phonebook\">\n        <ContactForm />\n      </Section>\n      <Section title=\"Contacts\">\n        {isLoading && !error ? (\n          <ThreeDots\n            height=\"80\"\n            width=\"80\"\n            radius=\"9\"\n            color=\"#33415c\"\n            ariaLabel=\"three-dots-loading\"\n            wrapperClassName=\"\"\n            visible={isLoading}\n            wrapperStyle={{ display: 'inline' }}\n          />\n        ) : (\n          <Filter />\n        )}\n        <ContactList />\n      </Section>\n    </Container>\n  );\n};\n\nexport default Contacts;"],"names":["Form","styled","InputName","Input","AddContact","selectContacts","state","contacts","selectIsLoading","isLoading","selectError","error","selectFilter","filter","useState","name","setName","phone","setPhone","useSelector","dispatch","useDispatch","handleChange","e","currentTarget","value","onSubmit","preventDefault","some","alert","addContact","type","onChange","pattern","title","required","ContactsList","ListItem","DeleteBtn","visibleContacts","contact","toLowerCase","includes","map","onClick","deleteContact","id","SectionBox","SectionTitle","Section","children","FilterTitle","FilterInput","changeFilter","Container","useEffect","fetchContacts","height","width","radius","color","ariaLabel","wrapperClassName","visible","wrapperStyle","display"],"sourceRoot":""}