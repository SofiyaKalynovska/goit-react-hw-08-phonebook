{"version":3,"file":"static/js/33.033db698.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","components/Section/Section.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","components/App.styled.jsx","pages/Contacts.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Form = styled.form`\nwidth: 90%;\ndisplay: flex;\nflex-direction: column;\ngap: 20px;\nfont-size: 26px;\n\n`","import { useState } from 'react';\nimport { Form } from './ContactForm.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/selectors';\nimport { addContact } from 'redux/operations';\nimport { Box, Button, TextField, Typography } from '@mui/material';\nimport { AddBoxTwoTone } from '@mui/icons-material';\n\nconst ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (contacts.some(e => e.name === name)) {\n      alert(`${name} is already in contacts`);\n    } else {\n      dispatch(addContact({ name, number }));\n    }\n    setName('');\n    setNumber('');\n  };\n\n  const handleChange = e => {\n    switch (e.currentTarget.name) {\n      case 'name':\n        setName(e.currentTarget.value);\n        break;\n      case 'number':\n        setNumber(e.currentTarget.value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  return (\n    <Box\n      sx={{\n        backgroundColor: '#e8ebff',\n        marginTop: '30px',\n        padding: 2,\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n      }}\n    >\n      <Form onSubmit={handleSubmit}>\n        <Typography variant=\"body\" component=\"label\" color=\"#1976d2\">\n          Name\n        </Typography>\n        <TextField\n          label=\"Provide name\"\n          variant=\"outlined\"\n          type=\"text\"\n          value={name}\n          onChange={handleChange}\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          inputProps={{ style: { fontSize: 26 } }}\n        />\n        <Typography variant=\"body\" component=\"label\" color=\"#1976d2\">\n          Number\n        </Typography>\n        <TextField\n          label=\"Provide number\"\n          variant=\"outlined\"\n          type=\"tel\"\n          value={number}\n          onChange={handleChange}\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          inputProps={{ style: { fontSize: 26 } }}\n        />\n        <Button\n          variant=\"contained\"\n          startIcon={<AddBoxTwoTone />}\n          color=\"info\"\n          type=\"submit\"\n          sx={{ m: 'auto', fontSize: 20 }}\n        >\n          Add contact\n        </Button>\n      </Form>\n    </Box>\n  );\n};\n\nexport default ContactForm;\n","import styled from '@emotion/styled';\nimport { List, ListItem } from '@mui/material';\n\nexport const ContactsList = styled(List)`\npadding: 10px;\n`\nexport const ContactListItem = styled(ListItem)`\nmargin-bottom: 10px;\nheight: max-content;\ndisplay: flex;\nalign-items: center;\njustify-content: space-between;\nborder-bottom: 1px solid grey;\n\n`\nexport const DeleteBtn = styled.button`\n\nmargin-left: 20px;\n`","import { ContactListItem, DeleteBtn } from './ContactList.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts, selectFilter } from 'redux/selectors';\nimport { deleteContact } from 'redux/operations';\nimport { List } from '@mui/material';\n\nconst ContactList = () => {\n  const contacts = useSelector(selectContacts);\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n  const visibleContacts = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(filter?.toLowerCase())\n  );\n\n  return (\n    <List>\n      {visibleContacts.map(contact => (\n        <ContactListItem key={contact.id}>\n          {contact.name}: {contact.number}\n          <DeleteBtn\n            type=\"button\"\n            onClick={() => dispatch(deleteContact(contact.id))}\n          >\n            Delete\n          </DeleteBtn>\n        </ContactListItem>\n      ))}\n    </List>\n  );\n};\n\nexport default ContactList;\n","import PropTypes from 'prop-types';\nimport { Box, Typography, Container } from '@mui/material';\n\nexport default function Section({ title, children }) {\n  return (\n    <Container sx={{mt: 3}}>\n      <Box\n        sx={{\n          backgroundColor: '#e8ebff',\n          boxShadow:\n            ' rgba(0, 0, 0, 0.07) 0px 1px 1px, rgba(0, 0, 0, 0.07) 0px 2px 2px, rgba(0, 0, 0, 0.07) 0px 4px 4px, rgba(0, 0, 0, 0.07) 0px 8px 8px, rgba(0, 0, 0, 0.07) 0px 16px 16px;',\n          padding: 2,\n        }}\n      >\n        <Typography variant=\"h4\" component=\"h2\">\n          {title}\n        </Typography>\n        {children}\n      </Box>\n    </Container>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n};\n","import styled from 'styled-components'\n\nexport const FilterTitle = styled.h3`\nfont-size: 24px;\nfont-weight: 500;\nmargin-bottom: 10px;\n`\nexport const FilterInput = styled.input`\nwidth: 260px;\nmargin: auto;\n`","import { FilterTitle, FilterInput } from './Filter.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectFilter } from 'redux/selectors';\nimport { changeFilter } from 'redux/filtersSlice';\n\nconst Filter = () => {\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n  const handleFilter = e => {\n    e.preventDefault();\n    dispatch(changeFilter(e.currentTarget.value));\n  };\n  return (\n    <>\n      <FilterTitle>Find contacts by name</FilterTitle>\n      <FilterInput\n        type=\"search\"\n        name=\"filter\"\n        value={filter}\n        onChange={handleFilter}\n      />\n    </>\n  );\n};\n\nexport default Filter;\n","import styled from '@emotion/styled';\nimport { Container } from '@mui/material';\n\nexport const Wrapper = styled(Container)`\n  padding: 20px;\n  margin: auto;\n  width: 300px;\n  @media (min-width: 480px) {\n    width: 420px;\n  }\n  @media (min-width: 768px) {\n    width: 700px;\n  }\n  @media (min-width: 1280px) {\n    width: 1000px;\n  }\n`;\n","import ContactForm from '../components/ContactForm/ContactForm';\nimport ContactList from '../components/ContactList/ContactList';\nimport Section from '../components/Section/Section';\nimport Filter from '../components/Filter/Filter';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'redux/operations';\nimport { selectIsLoading, selectError } from 'redux/selectors';\nimport { ThreeDots } from 'react-loader-spinner';\nimport { Wrapper } from '../components/App.styled';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <Wrapper>\n      <Section title=\"Phonebook\">\n        <ContactForm />\n      </Section>\n      <Section title=\"Contacts\">\n        {isLoading && !error ? (\n          <ThreeDots\n            height=\"80\"\n            width=\"80\"\n            radius=\"9\"\n            color=\"#33415c\"\n            ariaLabel=\"three-dots-loading\"\n            wrapperClassName=\"\"\n            visible={isLoading}\n            wrapperStyle={{ display: 'inline' }}\n          />\n        ) : (\n          <Filter />\n        )}\n        <ContactList />\n      </Section>\n    </Wrapper>\n  );\n};\n\nexport default Contacts;"],"names":["Form","styled","useState","name","setName","number","setNumber","contacts","useSelector","selectContacts","dispatch","useDispatch","handleChange","e","currentTarget","value","Box","sx","backgroundColor","marginTop","padding","display","flexDirection","alignItems","onSubmit","preventDefault","some","alert","addContact","Typography","variant","component","color","TextField","label","type","onChange","pattern","title","required","inputProps","style","fontSize","Button","startIcon","AddBoxTwoTone","m","ContactListItem","List","ListItem","DeleteBtn","filter","selectFilter","visibleContacts","contact","toLowerCase","includes","map","onClick","deleteContact","id","Section","children","Container","mt","boxShadow","FilterTitle","FilterInput","changeFilter","Wrapper","isLoading","selectIsLoading","error","selectError","useEffect","fetchContacts","height","width","radius","ariaLabel","wrapperClassName","visible","wrapperStyle"],"sourceRoot":""}