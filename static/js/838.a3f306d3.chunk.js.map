{"version":3,"file":"static/js/838.a3f306d3.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","components/ContactList.jsx","components/Section.jsx","components/Filter.jsx","components/App/App.styled.jsx","pages/Contacts.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Form = styled.form`\nwidth: 90%;\ndisplay: flex;\nflex-direction: column;\ngap: 20px;\nfont-size: 26px;\n`","import { useState } from 'react';\nimport { Form } from './ContactForm.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/selectors';\nimport { addContact } from 'redux/operations';\nimport { Box, Button, TextField, Typography } from '@mui/material';\nimport { AddBoxTwoTone } from '@mui/icons-material';\n\nconst ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (contacts.some(e => e.name === name)) {\n      alert(`${name} is already in contacts`);\n    } else {\n      dispatch(addContact({ name, number }));\n    }\n    setName('');\n    setNumber('');\n  };\n\n  const handleChange = e => {\n    switch (e.currentTarget.name) {\n      case 'name':\n        setName(e.currentTarget.value);\n        break;\n      case 'number':\n        setNumber(e.currentTarget.value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  return (\n    <Box\n      sx={{\n        backgroundColor: '#e8ebff',\n        marginTop: '30px',\n        padding: 2,\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n      }}\n    >\n      <Form onSubmit={handleSubmit}>\n        <Typography\n          variant=\"body\"\n          component=\"label\"\n          color=\"#1976d2\"\n          sx={{ fontSize: { xs: '20px', sm: '28px' } }}\n        >\n          Name\n        </Typography>\n        <TextField\n          label=\"Provide name\"\n          variant=\"outlined\"\n          type=\"text\"\n          value={name}\n          onChange={handleChange}\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          inputProps={{ style: { fontSize: 26 } }}\n        />\n        <Typography\n          variant=\"body\"\n          component=\"label\"\n          color=\"#1976d2\"\n          sx={{ fontSize: { xs: '20px', sm: '28px' } }}\n        >\n          Number\n        </Typography>\n        <TextField\n          label=\"Provide number\"\n          variant=\"outlined\"\n          type=\"tel\"\n          value={number}\n          onChange={handleChange}\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          inputProps={{ style: { fontSize: 26 } }}\n        />\n        <Button\n          variant=\"contained\"\n          startIcon={<AddBoxTwoTone />}\n          color=\"info\"\n          type=\"submit\"\n          sx={{\n            m: 'auto',\n            fontSize: { xs: 10, sm: 20 },\n          }}\n        >\n          Add contact\n        </Button>\n      </Form>\n    </Box>\n  );\n};\n\nexport default ContactForm;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts, selectFilter } from 'redux/selectors';\nimport { deleteContact } from 'redux/operations';\nimport {\n  List,\n  ListItem,\n  ListItemIcon,\n  Button,\n  ListItemText,\n} from '@mui/material';\nimport { Phone } from '@mui/icons-material';\n\nconst ContactList = () => {\n  const contacts = useSelector(selectContacts);\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n  const visibleContacts = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(filter?.toLowerCase())\n  );\n\n  return (\n    <List\n      sx={{\n        [`& :hover`]: {\n          fontWeight: 'bold',\n        },\n      }}\n    >\n      {visibleContacts.map(contact => (\n        <ListItem\n          key={contact.id}\n          dense={true}\n          sx={{\n            boxShadow: 3,\n            display: 'flex',\n            flexDirection: { xs: 'column', sm: 'inherit' },\n            gap: { xs: '1px', sm: '5px' },\n            alignItems: 'center',\n          }}\n        >\n          <ListItemIcon>\n            <Phone sx={{ inlineSize: { xs: 40, sm: 35 } }} />\n          </ListItemIcon>\n\n          <ListItemText\n            sx={{ fontSize: { xs: 20, sm: 22, md: 24, xl: 26 } }}\n            disableTypography\n          >\n            {contact.name}: {contact.number}\n          </ListItemText>\n          <Button\n            color=\"error\"\n            variant=\"contained\"\n            size=\"small\"\n            type=\"button\"\n            onClick={() => dispatch(deleteContact(contact.id))}\n          >\n            Delete\n          </Button>\n        </ListItem>\n      ))}\n    </List>\n  );\n};\n\nexport default ContactList;\n","import PropTypes from 'prop-types';\nimport { Box, Typography, Container } from '@mui/material';\n\nexport default function Section({ title, children }) {\n  return (\n    <Container sx={{ mt: 3, padding: 0 }}>\n      <Box\n        sx={{\n          backgroundColor: '#e8ebff',\n          boxShadow:\n            ' rgba(0, 0, 0, 0.07) 0px 1px 1px, rgba(0, 0, 0, 0.07) 0px 2px 2px, rgba(0, 0, 0, 0.07) 0px 4px 4px, rgba(0, 0, 0, 0.07) 0px 8px 8px, rgba(0, 0, 0, 0.07) 0px 16px 16px;',\n          padding: 2,\n        }}\n      >\n        <Typography variant=\"h4\" component=\"h2\">\n          {title}\n        </Typography>\n        {children}\n      </Box>\n    </Container>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n};\n","import { useDispatch, useSelector } from 'react-redux';\nimport { selectFilter } from 'redux/selectors';\nimport { changeFilter } from 'redux/filtersSlice';\nimport { Typography, TextField, Box } from '@mui/material';\nimport { Form } from 'components/ContactForm/ContactForm.styled';\n\nconst Filter = () => {\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n  const handleFilter = e => {\n    e.preventDefault();\n    dispatch(changeFilter(e.currentTarget.value));\n  };\n  return (\n    <Box\n      sx={{\n        backgroundColor: '#e8ebff',\n        margin: '20px',\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n      }}\n    >\n      <Form>\n        <Typography\n          variant=\"body\"\n          component=\"label\"\n          color=\"#1976d2\"\n          sx={{ fontSize: { xs: '20px', sm: '28px' } }}\n        >\n          Find contacts by name\n        </Typography>\n        <TextField\n          fullWidth\n          label=\"Start typing...\"\n          variant=\"outlined\"\n          type=\"search\"\n          fontSize=\"40\"\n          name=\"filter\"\n          value={filter}\n          onChange={handleFilter}\n          inputProps={{ style: { fontSize: 24 } }}\n        />\n      </Form>\n    </Box>\n  );\n};\n\nexport default Filter;\n","import styled from '@emotion/styled';\nimport { Container } from '@mui/material';\n\nexport const Wrapper = styled(Container)`\n  padding: 20px;\n  margin: auto;\n`;\n","import ContactForm from '../components/ContactForm/ContactForm';\nimport ContactList from '../components/ContactList';\nimport Section from '../components/Section';\nimport Filter from '../components/Filter';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'redux/operations';\nimport { selectIsLoading, selectError } from 'redux/selectors';\nimport { ThreeDots } from 'react-loader-spinner';\nimport { Wrapper } from '../components/App/App.styled';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <Wrapper>\n      <Section title=\"Phonebook\">\n        <ContactForm />\n      </Section>\n      <Section title=\"Contacts\">\n        {isLoading && !error ? (\n          <ThreeDots\n            height=\"80\"\n            width=\"80\"\n            radius=\"9\"\n            color=\"#33415c\"\n            ariaLabel=\"three-dots-loading\"\n            wrapperClassName=\"\"\n            visible={isLoading}\n            wrapperStyle={{ display: 'inline' }}\n          />\n        ) : (\n          <Filter />\n        )}\n        <ContactList />\n      </Section>\n    </Wrapper>\n  );\n};\n\nexport default Contacts;\n"],"names":["Form","styled","useState","name","setName","number","setNumber","contacts","useSelector","selectContacts","dispatch","useDispatch","handleChange","e","currentTarget","value","Box","sx","backgroundColor","marginTop","padding","display","flexDirection","alignItems","onSubmit","preventDefault","some","alert","addContact","Typography","variant","component","color","fontSize","xs","sm","TextField","label","type","onChange","pattern","title","required","inputProps","style","Button","startIcon","AddBoxTwoTone","m","filter","selectFilter","visibleContacts","contact","toLowerCase","includes","List","fontWeight","map","ListItem","dense","boxShadow","gap","ListItemIcon","Phone","inlineSize","ListItemText","md","xl","disableTypography","size","onClick","deleteContact","id","Section","children","Container","mt","margin","fullWidth","changeFilter","Wrapper","isLoading","selectIsLoading","error","selectError","useEffect","fetchContacts","height","width","radius","ariaLabel","wrapperClassName","visible","wrapperStyle"],"sourceRoot":""}